specVersion: alpha
kind: YaRD
name: 'BasePrice'
inputs:
  - name: Persons
    type: Store
elements:
  - name: Kids by parent initials
    type: Decision
    logic:
      type: Rules
      result: Map
      rules:
        - when:
            - groupBy:
                  given: $p
                  from: Persons
                  having:
                    - age >= 18
              grouping:
                  function: $p.name[0]
                  as: $initial
              accumulator:
                  function: sum($p.kids)
                  as: $kidCount
          then:
            result:
              - put:
                  key: $initial
                  value: $kidCount

#  - name: Group
#    type: Decision
#    logic:
#      type: Rules
#      result: Map
#      rules:
#        - when:
#            - groupBy:
#                given: $p
#                from: Persons
#                having:
#                  - age >= 18
#              grouping:
#                function: $p.name[0]
#                as: $initial
#              accumulator:
#                function: sum($p.kids)
#                as: $kidCount
#          then:
#            result:
#              - put:
#                  key: $initial
#                  value: $kidCount
