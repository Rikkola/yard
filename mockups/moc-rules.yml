specVersion: alpha
kind: YaRD
name: 'Using moc Rules with Decisions'
expressionLang: alpha
inputs:
  - name: 'Driver'
    type: 'http://myapi.org/jsonSchema.json#Driver'
  - name: 'Violation'
    type: 'http://myapi.org/jsonSchema.json#Violation'
elements:
  - name: 'Fine'
    type: Decision
    logic: 
      type: DecisionTable
      inputs: ['Violation.type', 'Violation.Actual Speed - Violation.Speed Limit']
      outputComponents: ['Amount', 'Points']
      rules:
      - ['="speed"', '[10..30)', 500, 3]
      - ['="speed"', '>= 30', 1000, 7]
      - ['="parking"', '-', 100, 1]
      - ['="driving under the influence"', '-', 1000, 5]
  - name: 'Should the driver be sanctioned?'
    type: moc Rules
    schemas: http://myapi.org/jsonSchema.json
    host_rules:
      - name: R1
        condition:
          all:
          - $f: Fine( Points > 0 )
          - $d: Driver()
        action:
          assert_fact:
            sum of points: $f.Points + $d.Points
            total due: $f.Amount
      - name: R2
        condition: Balance( sum of points > 20 )
        action:
          send_event: 'Suspend driver'
      - name: R3
        condition: Balance( total due >= 1000 )
        action:
          send_event: 'Issue money collection priority slip'
---
